% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ash.R
\name{ash}
\alias{ash}
\title{Main Adaptive Shrinkage function}
\usage{
ash(betahat, sebetahat, mixcompdist = c("uniform", "halfuniform", "normal",
  "+uniform", "-uniform"), df = NULL, ...)
}
\arguments{
\item{betahat}{a p vector of estimates}

\item{sebetahat}{a p vector of corresponding standard errors}

\item{mixcompdist}{distribution of components in mixture
("uniform","halfuniform" or "normal"; "+uniform" or
"-uniform"), the default is "uniform". If you believe your
effects may be asymmetric, use "halfuniform". If you want to
allow only positive/negative effects use "+uniform"/"-uniform".
The use of "normal" is permitted only if df=NULL.}

\item{df}{appropriate degrees of freedom for (t) distribution of
betahat/sebetahat, default is NULL which is actually treated as
infinity (Gaussian)}

\item{...}{Further arguments to be passed to
\code{\link{ash.workhorse}}.}
}
\value{
ash returns an object of \code{\link[base]{class}} "ash", a list with some or all of the following elements (determined by outputlevel) \cr
\item{fitted.g}{fitted mixture, either a normalmix or unimix}
\item{loglik}{log P(D|mle(pi))}
\item{logLR}{log[P(D|mle(pi))/P(D|beta==0)]}
\item{PosteriorMean}{A vector consisting the posterior mean of beta from the mixture}
\item{PosteriorSD}{A vector consisting the corresponding posterior standard deviation}
\item{PositiveProb}{A vector of posterior probability that beta is positive}
\item{NegativeProb}{A vector of posterior probability that beta is negative}
\item{ZeroProb}{A vector of posterior probability that beta is zero}
\item{lfsr}{The local false sign rate}
\item{lfdr}{A vector of estimated local false discovery rate}
\item{qvalue}{A vector of q values}
\item{call}{a call in which all of the specified arguments are specified by their full names}
\item{excludeindex}{the vector of index of observations with 0 standard error; if none, then returns NULL}
\item{model}{either "EE" or "ET", denoting whether exchangeable effects (EE) or exchangeable T stats (ET) has been used}
\item{optmethod}{the optimization method used}
\item{data}{a list consisting the input betahat and sebetahat (only included if outputlevel>2)}
}
\description{
Takes vectors of estimates (betahat) and their
    standard errors (sebetahat), and applies shrinkage to them,
    using Empirical Bayes methods, to compute shrunk estimates for
    beta.
}
\details{
This function is actually just a simple wrapper that
    passes its parameters to \code{\link{ash.workhorse}} which
    provides more documented options for advanced use. See readme
    for more details.
}
\examples{
beta = c(rep(0,100),rnorm(100))
sebetahat = abs(rnorm(200,0,1))
betahat = rnorm(200,beta,sebetahat)
beta.ash = ash(betahat, sebetahat)
summary(beta.ash)
names(beta.ash)
graphics::plot(betahat,beta.ash$PosteriorMean,xlim=c(-4,4),ylim=c(-4,4))

CIMatrix=ashci(beta.ash,level=0.95)
print(CIMatrix)

#Illustrating the non-zero mode feature
betahat=betahat+5
beta.ash = ash(betahat, sebetahat)
graphics::plot(betahat,beta.ash$PosteriorMean)
summary(beta.ash)
betan.ash=ash(betahat, sebetahat,nonzeromode=TRUE)
graphics::plot(betahat, betan.ash$PosteriorMean)
summary(betan.ash)
}
\seealso{
\code{\link{ash.workhorse}} for complete specification of ash function

\code{\link{ashci}} for computation of credible intervals after getting the ash object return by \code{ash()}

\code{\link{ashm}} for Multi-model Adaptive Shrinkage function
}

